{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from 'axios';\nimport { ref } from 'vue';\n// import { resolve } from 'path'\n// import { onMounted, ref } from 'vue'\n\nexport default {\n  name: 'SurahVue',\n  components: {},\n  async setup() {\n    const quran = ref([]);\n    const input = ref('');\n\n    // fetch data menggunakan fetch API\n    // const response = await fetch('http://quran-api.santrikoding.com/api/surah')\n    // quran.value = await response.json()\n\n    // await new Promise(resolve => setTimeout(resolve, 5000));\n\n    // fetch data menggunakan axios\n    await axios.get('https://equran.id/api/surat').then(response => {\n      quran.value = response.data;\n    }).catch(error => {\n      console.log(error.response.data);\n    });\n    return {\n      quran,\n      input\n    };\n  },\n  computed: {\n    filteredQuran() {\n      // search nama_latin dan arti\n      return this.quran.filter(quran => {\n        return quran.nama_latin.toLowerCase().includes(this.input.toLowerCase()) || quran.arti.toLowerCase().includes(this.input.toLowerCase());\n      });\n    }\n  }\n\n  // code using onMounted\n  // setup() {\n  //     //reactive state\n  //     let quran = ref([])\n\n  //     //mounted\n  //     onMounted(() => {\n  //         //panggil function \"getDataPosts\"\n  //         getDataQuran()\n  //     })\n  //     //function \"getDataPosts\"\n  //     function getDataQuran() {\n  //         axios.get('http://quran-api.santrikoding.com/api/surah')\n  //             .then(response => {\n  //                 quran.value = response.data\n  //             }).catch(error => {\n  //                 console.log(error.response.data)\n  //             })\n  //     }\n  //     //return\n  //     return {\n  //         quran,\n  //         getDataQuran,\n  //     }\n  // },\n};","map":{"version":3,"names":["axios","ref","name","components","setup","quran","input","get","then","response","value","data","catch","error","console","log","computed","filteredQuran","filter","nama_latin","toLowerCase","includes","arti"],"sources":["D:\\My Github Repository\\My Quran With Vue.JS\\src\\pages\\Surah.vue"],"sourcesContent":["<template>\n\n    <div class=\"container mb-2\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"search\">\n                    <input type=\"text\" v-model=\"input\" class=\"search\" placeholder=\"Ketik nama surat...\">\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"container mb-5\">\n        <div class=\"row\">\n            <div class=\"col-md-4 col-12\" v-for=\"(surah, index) in filteredQuran\" :key=\"index\">\n                <router-link :to=\"{ name: 'surah', params: { id: surah.nomor } }\"\n                    class=\"text-decoration-none text-dark\">\n                    <div class=\"card mt-4\">\n                        <div class=\"card-body card-custom\">\n\n                            <router-link :to=\"{ name: 'surah', params: { id: surah.nomor } }\"\n                                class=\"text-decoration-none text-success\">\n                                <h2 class=\"float-end\"> {{ surah.nama }} </h2>\n                            </router-link>\n\n                            <router-link :to=\"{ name: 'surah', params: { id: surah.nomor } }\"\n                                class=\"text-decoration-none text-success\">\n                                <h5 class=\"card-title nama-latin\"> {{ surah.nomor }}. {{ surah.nama_latin }}\n                                    <small>({{ surah.jumlah_ayat }} ayat)</small>\n                                </h5>\n                            </router-link>\n                            \n                            <p class=\"card-text text-capitalize\">{{ surah.tempat_turun + ' â€¢ ' + surah.arti }}</p>\n                        </div>\n                    </div>\n                </router-link>\n            </div>\n            <div v-if=\"input && !filteredQuran.length\" class=\"mt-5 mb-5\">\n                <h3 class=\"text-center mt-5 mb-5\">Surat tidak ditemukan</h3>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { ref } from 'vue'\n// import { resolve } from 'path'\n// import { onMounted, ref } from 'vue'\n\nexport default {\n    name: 'SurahVue',\n    components: {},\n    async setup() {\n        const quran = ref([])\n        const input = ref('');\n\n        // fetch data menggunakan fetch API\n        // const response = await fetch('http://quran-api.santrikoding.com/api/surah')\n        // quran.value = await response.json()\n\n        // await new Promise(resolve => setTimeout(resolve, 5000));\n\n        // fetch data menggunakan axios\n        await axios.get('https://equran.id/api/surat')\n            .then(response => {\n                quran.value = response.data\n            }).catch(error => {\n                console.log(error.response.data)\n            })\n\n        return {\n            quran,\n            input,\n        }\n    },\n    computed: {\n        filteredQuran() {\n            // search nama_latin dan arti\n            return this.quran.filter(quran => {\n                return quran.nama_latin.toLowerCase().includes(this.input.toLowerCase()) || quran.arti.toLowerCase().includes(this.input.toLowerCase())\n            })\n        }\n    }\n\n    // code using onMounted\n    // setup() {\n    //     //reactive state\n    //     let quran = ref([])\n\n    //     //mounted\n    //     onMounted(() => {\n    //         //panggil function \"getDataPosts\"\n    //         getDataQuran()\n    //     })\n    //     //function \"getDataPosts\"\n    //     function getDataQuran() {\n    //         axios.get('http://quran-api.santrikoding.com/api/surah')\n    //             .then(response => {\n    //                 quran.value = response.data\n    //             }).catch(error => {\n    //                 console.log(error.response.data)\n    //             })\n    //     }\n    //     //return\n    //     return {\n    //         quran,\n    //         getDataQuran,\n    //     }\n    // },\n\n}\n</script>\n\n<style scoped>\n.card {\n    border-top-left-radius: 3px;\n    border-top-right-radius: 20px;\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 3px;\n    transition: all 0.15s ease-in-out;\n}\n\n.card-body:hover {\n    background-color: rgb(246, 246, 246);\n    border-top-left-radius: 3px;\n    border-top-right-radius: 20px;\n    border-bottom-left-radius: 20px;\n    border-bottom-right-radius: 3px;\n    box-shadow: 0 0px 10px 0 rgba(0, 0, 0, 0.5);\n    transition: all 0.15s ease-in-out;\n}\n\n\nh5.nama-latin {\n    font-weight: 700;\n}\n\n.search {\n    width: 100%;\n    height: 60px;\n    border: 1px solid #ccc;\n    border-radius: 10px;\n    font-size: 16px;\n    outline: none;\n    transition: all 0.15s ease-in-out;\n}\n\n.search:focus {\n    box-shadow: 0 0px 10px 0 rgba(151, 151, 151, 0.5);\n    transition: all 0.15s ease-in-out;\n}\n\ninput {\n    padding: 15px;\n}\n\ninput::placeholder {\n    color: #aaa;\n}\n</style>"],"mappings":";;AA6CA,OAAOA,KAAI,MAAO,OAAM;AACxB,SAASC,GAAE,QAAS,KAAI;AACxB;AACA;;AAEA,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,CAAC,CAAC;EACd,MAAMC,KAAKA,CAAA,EAAG;IACV,MAAMC,KAAI,GAAIJ,GAAG,CAAC,EAAE;IACpB,MAAMK,KAAI,GAAIL,GAAG,CAAC,EAAE,CAAC;;IAErB;IACA;IACA;;IAEA;;IAEA;IACA,MAAMD,KAAK,CAACO,GAAG,CAAC,6BAA6B,EACxCC,IAAI,CAACC,QAAO,IAAK;MACdJ,KAAK,CAACK,KAAI,GAAID,QAAQ,CAACE,IAAG;IAC9B,CAAC,CAAC,CAACC,KAAK,CAACC,KAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACnC,CAAC;IAEL,OAAO;MACHN,KAAK;MACLC;IACJ;EACJ,CAAC;EACDU,QAAQ,EAAE;IACNC,aAAaA,CAAA,EAAG;MACZ;MACA,OAAO,IAAI,CAACZ,KAAK,CAACa,MAAM,CAACb,KAAI,IAAK;QAC9B,OAAOA,KAAK,CAACc,UAAU,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACf,KAAK,CAACc,WAAW,CAAC,CAAC,KAAKf,KAAK,CAACiB,IAAI,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACf,KAAK,CAACc,WAAW,CAAC,CAAC;MAC1I,CAAC;IACL;EACJ;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}